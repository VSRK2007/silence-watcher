var sheetName = 'Sheet1';
var activityLogSheet = 'ActivityLog';
var scriptProp = PropertiesService.getScriptProperties();

function intialSetup() {
  var activeSpreadsheet = SpreadsheetApp.getActiveSpreadsheet();
  scriptProp.setProperty('key', activeSpreadsheet.getId());

  // Create ActivityLog sheet if it doesn't exist
  var sheets = activeSpreadsheet.getSheets().map(s => s.getName());
  if (!sheets.includes(activityLogSheet)) {
    activeSpreadsheet.insertSheet(activityLogSheet);
    var logSheet = activeSpreadsheet.getSheetByName(activityLogSheet);
    logSheet.appendRow(['Timestamp', 'Action', 'Details']);
  }
}

function doPost(e) {
  var lock = LockService.getScriptLock();
  lock.tryLock(10000);

  try {
    var doc = SpreadsheetApp.openById(scriptProp.getProperty('key'));
    var sheet = doc.getSheetByName(sheetName);
    var newRow = sheet.getRange(1, 1, sheet.getLastRow(), sheet.getLastColumn()).getValues()[0];
    var header = newRow.map(function(header) {
      return header === 'Time' 
        ? Utilities.formatDate(new Date(), Session.getScriptTimeZone(), 'dd-MM-yyyy hh:mm:ss') 
        : e.parameter[header];
    });

    sheet.getRange(sheet.getLastRow() + 1, 1, 1, newRow.length).setValues([header]);

    // Log the activity
    var logSheet = doc.getSheetByName(activityLogSheet);
    var timestamp = Utilities.formatDate(new Date(), Session.getScriptTimeZone(), 'dd-MM-yyyy hh:mm:ss');
    var details = JSON.stringify(e.parameter);
    logSheet.appendRow([timestamp, 'New entry added to Sheet1', details]);

    return ContentService
      .createTextOutput(JSON.stringify({ 'result': 'success', 'row': header }))
      .setMimeType(ContentService.MimeType.JSON);
  } catch (error) {
    return ContentService
      .createTextOutput(JSON.stringify({ 'result': 'error', 'error': error }))
      .setMimeType(ContentService.MimeType.JSON);
  } finally {
    lock.releaseLock();
  }
}
